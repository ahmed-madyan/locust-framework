name: Locust Load Test with Grafana

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.py'
      - 'requirements.txt'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/*.py'
      - 'requirements.txt'
      - '.github/workflows/**'

jobs:
  load-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y curl
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        
    - name: Start monitoring stack
      run: |
        cd monitoring
        docker-compose up -d
        
    - name: Start Locust Exporter
      run: |
        cd monitoring
        python locust_exporter.py &
      continue-on-error: true
        
    - name: Run Locust Test
      run: |
        locust -f ./simulations/core/DummyJsonLoginCurrentUser_Flow.py --headless --html=locust-report.html --json=locust-report.json
      continue-on-error: true
      
    - name: Configure Grafana
      run: |
        # Wait for Grafana to be ready
        sleep 30
        
        # Add Prometheus data source
        curl -X POST http://admin:admin@localhost:3000/api/datasources \
          -H "Content-Type: application/json" \
          -d '{
            "name": "Prometheus",
            "type": "prometheus",
            "url": "http://prometheus:9090",
            "access": "proxy"
          }'
        
        # Import dashboard
        curl -X POST http://admin:admin@localhost:3000/api/dashboards/import \
          -H "Content-Type: application/json" \
          -d '{
            "dashboard": {
              "id": 11985,
              "title": "Locust Dashboard"
            },
            "overwrite": true
          }'
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: locust-report
        path: |
          locust-report.html
          locust-report.json
          
    - name: Upload Grafana Screenshot
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: grafana-dashboard
        path: grafana-screenshot.png 